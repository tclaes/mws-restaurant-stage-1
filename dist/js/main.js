let restaurants,neighborhoods,cuisines;var markers=[];document.addEventListener('DOMContentLoaded',()=>{fetchNeighborhoods(),fetchCuisines()}),lazyLoad=()=>new LazyLoad,fetchNeighborhoods=()=>{DBHelper.fetchNeighborhoods((a,b)=>{a?console.error(a):(self.neighborhoods=b,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=(a=self.neighborhoods)=>{const b=document.getElementById('neighborhoods-select');a.forEach((a)=>{const c=document.createElement('option');c.innerHTML=a,c.value=a,b.append(c)})},fetchCuisines=()=>{DBHelper.fetchCuisines((a,b)=>{a?console.error(a):(self.cuisines=b,fillCuisinesHTML())})},fillCuisinesHTML=(a=self.cuisines)=>{const b=document.getElementById('cuisines-select');a.forEach((a)=>{const c=document.createElement('option');c.innerHTML=a,c.value=a,b.append(c)})},window.initMap=()=>{self.map=new google.maps.Map(document.getElementById('map'),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),self.map.addListener('tilesloaded',setMapTitle),updateRestaurants()},setMapTitle=()=>{const a=document.querySelector('#map').querySelector('iframe');a.setAttribute('title','Google maps with restaurant location')},updateRestaurants=()=>{const a=document.getElementById('cuisines-select'),b=document.getElementById('neighborhoods-select'),c=a.selectedIndex,d=b.selectedIndex,e=a[c].value,f=b[d].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(e,f,(a,b)=>{a?console.error(a):(resetRestaurants(b),fillRestaurantsHTML())})},resetRestaurants=(a)=>{self.restaurants=[];const b=document.getElementById('restaurants-list');b.innerHTML='',self.markers.forEach((a)=>a.setMap(null)),self.markers=[],self.restaurants=a},fillRestaurantsHTML=(a=self.restaurants)=>{const b=document.getElementById('restaurants-list');a.forEach((a)=>{DBHelper.saveRestaurantDataLocally(a),b.append(createRestaurantHTML(a))}),addMarkersToMap()},createRestaurantHTML=(a)=>{const b=document.createElement('li'),c=document.createElement('picture'),d=document.createElement('source');d.className='restaurant-img lazy',d.setAttribute('data-srcset',DBHelper.imageUrlForRestaurant(a)+'_small.webp'),d.setAttribute('media','(min-width: 400px)'),c.append(d);const e=document.createElement('source');e.className='restaurant-img lazy',e.setAttribute('data-srcset',DBHelper.imageUrlForRestaurant(a)+'_large.webp'),e.setAttribute('media','(min-width: 900px)'),c.append(e);const f=document.createElement('img');f.className='restaurant-img lazy',f.setAttribute('data-src',DBHelper.imageUrlForRestaurant(a)+'_small.jpg'),f.alt='An image of restaurant '+a.name+' in '+a.neighborhood,c.append(f),b.append(c);const g=document.createElement('h2');g.innerHTML=a.name,b.append(g);const h=document.createElement('p');h.innerHTML=a.neighborhood,b.append(h);const i=document.createElement('p');i.innerHTML=a.address,b.append(i);const j=document.createElement('a');return j.innerHTML='View Details',j.href=DBHelper.urlForRestaurant(a),b.append(j),b.onload=lazyLoad(),b},addMarkersToMap=(a=self.restaurants)=>{a.forEach((a)=>{const b=DBHelper.mapMarkerForRestaurant(a,self.map);google.maps.event.addListener(b,'click',()=>{window.location.href=b.url}),self.markers.push(b)})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
